fragment Task on Task {
  id
  name
  enable
  key
  updatedAt
  createdAt
  ownerId
}

query Task($id: ID!) {
  task(id: $id) {
    ...Task
    code
  }
}

query Tasks($after: String, $query: String, $orderBy: [Ordering]) {
  tasks(first: 10, after: $after, query: $query, orderBy: $orderBy) {
    totalCount
    pageInfo {
      hasNextPage
      endCursor
    }

    edges {
      node {
        ...Task
      }
    }
  }
}

mutation DeleteTask($id: ID!) {
  deleteTask(id: $id) {
    ...Task
  }
}
mutation CreateTask($input: CreateTaskInput!) {
  createTask(input: $input) {
    ...Task
  }
}

mutation UpdateTask($id: ID!, $input: UpdateTaskInput!) {
  updateTask(id: $id, input: $input) {
    ...Task
  }
}
